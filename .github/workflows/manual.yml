# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      include_prod:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Deploy to Prod?'
        # Default value if no value is explicitly provided
        default: false
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: boolean

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  semver:
    runs-on: ubuntu-latest
    steps:
    - name: Git Semantic Version
      id: version
      uses: PaulHatch/semantic-version@v5.3.0
      with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
        major_regexp_flags: ""
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
        minor_regexp_flags: ""
        # A string to determine the format of the version output
        version_format: "${major}.${minor}.${patch}-prerelease${increment}"
        # Named version, will be used as suffix for name version tag
        namespace: tekstebanken
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: false
        # If bump_each_commit is also set to true, setting this value will cause the version to increment only if the pattern specified is matched.
        bump_each_commit_patch_pattern: ""
        # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
        search_commit_body: true
        # The output method used to generate list of users, 'csv' or 'json'.
        user_format_type: "csv"
        # Prevents pre-v1.0.0 version from automatically incrementing the major version.
        # If enabled, when the major version is 0, major releases will be treated as minor and minor as patch. Note that the version_type output is unchanged.
        enable_prerelease_mode: true
        # If enabled, diagnostic information will be added to the action output.
        debug: true
        # If true, the branch will be used to select the maximum version.
        version_from_branch: false
    - name: log
      run: echo ${{ steps.version.outputs.version_tag }}
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Output Deploy to Porduction?
      run: echo Include Prod ${{ inputs.include_prod }}

  build1:
    needs: greet
    uses: ./.github/workflows/dotnet.yml
    with:
      environment: Dummy
  build2:
    needs: build1
    if: ${{ inputs.include_prod == true }}
    uses: ./.github/workflows/dotnet.yml
